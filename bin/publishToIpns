#!/usr/bin/env coffee

require('dotenv').load()
{d, json, log} = require 'lightsaber'
require 'shelljs/global'
sleep = require 'sleep'

IPFS = "node_modules/.bin/ipfs --config ./.ipfs"
PEER_ID = process.env.PEER_ID or throw new Error "Please set env var PEER_ID"
PRIVATE_KEY = process.env.PRIVATE_KEY or throw new Error "Please set env var PRIVATE_KEY"

daemon = null

main = ->
  daemon = execv "#{IPFS} init --empty-repo"
  daemon = execv "#{IPFS} config Identity.PeerID #{PEER_ID}"
  daemon = exec  "#{IPFS} config Identity.PrivKey '#{PRIVATE_KEY}'"

  daemon = execv "#{IPFS} daemon", async: true
  try
    daemon.stdout.on 'data', (data) ->
      if data.match /Daemon is ready/
        publishToIpns()
  catch
    killDaemon()

publishToIpns = ->
  ipfsHash = execv("#{IPFS} add -r -q public | tail -n 1").output.trim()
  ipnsResponse = execv("#{IPFS} name publish #{ipfsHash}").output
  ipnsName = ipnsResponse.match(/Published to ([0-9A-Za-z]+)/)[1]
  fetch ipnsName
  killDaemon()

fetch = (ipnsName) ->
  execv "
    wget
      --page-requisites
      --tries=60
      --waitretry=60
      --wait=1
      https://ipfs.io/ipns/#{ipnsName}/
    "

killDaemon = -> execv "kill -9 #{daemon.pid}"

# exec verbose:
execv = (cmd, options) ->
  log "\n==> #{cmd}   #{if options then '# '+json(options) else ''}"
  exec cmd, options

main()
